/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  query CurrentUser {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n            users_statusID\n            users_name\n            users_identificationNumber\n            users_login\n            users_phoneNumber\n          }\n          addressInfo {\n            usersAddress_communityID\n            usersAddress_typeID\n            usersAddress_ID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n          }\n          cards {\n            usersCards_ID\n            usersCards_number\n          }\n          dumpsters {\n            dumpster_ID\n            dumpster_name\n          }\n        }\n      }\n    }\n  }\n": types.CurrentUserDocument,
    "\n  query AdminCardsOrdersGet {\n    admin {\n      cardsOrders {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n          cardsBulkOrder_numOfCards\n          user {\n            users_name\n          }\n        }\n      }\n    }\n  }\n": types.AdminCardsOrdersGetDocument,
    "\n  mutation AdminCardsOrdersVerifyAdd(\n    $props: AdminCardsOrdersVerifyAddMutationProps!\n  ) {\n    admin {\n      cardsOrders {\n        verifyAdd(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminCardsOrdersVerifyAddDocument,
    "\n  mutation AdminDumpstersBinEdit($props: AdminDumpstersBinEditMutationProps!) {\n    admin {\n      dumpsters {\n        bin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminDumpstersBinEditDocument,
    "\n  mutation AdminDumpstersAdd($props: AdminDumpstersAddMutationProps!) {\n    admin {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminDumpstersAddDocument,
    "\n  mutation AdminDumpstersDelete($props: AdminDumpstersDeleteMutationProps!) {\n    admin {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminDumpstersDeleteDocument,
    "\n  mutation AdminDumpstersEdit($props: AdminDumpstersEditMutationProps!) {\n    admin {\n      dumpsters {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminDumpstersEditDocument,
    "\n  query AdminDumpstersGet2 {\n    admin {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          dumpster_name\n          dumpster_description\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_typeID\n          }\n          owners {\n            users_name\n            users_ID\n          }\n        }\n      }\n    }\n  }\n": types.AdminDumpstersGet2Document,
    "\n  mutation AdminOwnersAdd($props: AdminOwnersAddMutationProps!) {\n    admin {\n      owners {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminOwnersAddDocument,
    "\n  mutation AdminOfficialsAdd($props: AdminNewOfficialAddMutationProps!) {\n    admin {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.AdminOfficialsAddDocument,
    "\n  mutation AdminOwnersDelete($props: AdminOwnersDeleteMutationProps!) {\n    admin {\n      owners {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminOwnersDeleteDocument,
    "\n  mutation AdminChangePassword(\n    $props: AdminChangeOfficialAndSuperOfficialChangePasswordProps!\n  ) {\n    admin {\n      officials {\n        changePassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminChangePasswordDocument,
    "\n  mutation AdminOfficialsDelete($props: AdminOfficialsDeleteMutationProps!) {\n    admin {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.AdminOfficialsDeleteDocument,
    "\n  query AdminOfficialsGet {\n    admin {\n      officials {\n        get {\n          users_ID\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          users_name\n          users_login\n          addresses {\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_city\n          }\n        }\n      }\n    }\n  }\n": types.AdminOfficialsGetDocument,
    "\n  query UserGarbageGet($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n": types.UserGarbageGetDocument,
    "\n  query TerritorialDivisonMunicipalities(\n    $props: TerritorialMunicipalitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      municipalities {\n        get(props: $props) {\n          municipality_ID\n          municipality_name\n          municipality_description\n          municipality_voivodeshipID\n        }\n      }\n    }\n  }\n": types.TerritorialDivisonMunicipalitiesDocument,
    "\n  query TerritorialDivisonCommunities(\n    $props: TerritorialCommunitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      communities {\n        get(props: $props) {\n          community_ID\n          community_name\n          community_description\n          community_municipalityID\n          community_voivodeshipID\n        }\n      }\n    }\n  }\n": types.TerritorialDivisonCommunitiesDocument,
    "\n  mutation CompanyCardsAdd($props: CompanyCardsAddMutationProps!) {\n    company {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyCardsAddDocument,
    "\n  query CompanyCardsGet {\n    company {\n      cards {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_userID\n          cardsBulkOrder_numOfCards\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n        }\n      }\n    }\n  }\n": types.CompanyCardsGetDocument,
    "\n  query CompanyOccupantsGets {\n    company {\n      occupants {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_statusID\n          connection_ID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n": types.CompanyOccupantsGetsDocument,
    "\n  mutation CompanyCardsRentAdd($props: CompanyCardsRentAddMutationProps!) {\n    company {\n      cardsRent {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyCardsRentAddDocument,
    "\n  mutation CompanyCardsRentDelete(\n    $props: CompanyCardsRentDeleteMutationProps!\n  ) {\n    company {\n      cardsRent {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyCardsRentDeleteDocument,
    "\n  query CommonUserGet($props: CommonUserDataGetQueryProps!) {\n    common {\n      user {\n        get(props: $props) {\n          basicInfo {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n": types.CommonUserGetDocument,
    "\n  mutation OfficialContractsAdd($props: OfficialContractsAddMutationProps!) {\n    official {\n      contracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialContractsAddDocument,
    "\n  mutation OfficialContractsArchivize(\n    $props: OfficialContractsArchivizeMutationProps!\n  ) {\n    official {\n      contracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialContractsArchivizeDocument,
    "\n  mutation OfficialContractsEdit($props: OfficialContractsEditMutationProps!) {\n    official {\n      contracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialContractsEditDocument,
    "\n  mutation OfficialRatesAdd($props: OfficialRatesAddMutationProps!) {\n    official {\n      rates {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialRatesAddDocument,
    "\n  mutation OfficialRatesDelete($props: OfficialRatesDeleteMutationProps!) {\n    official {\n      rates {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialRatesDeleteDocument,
    "\n  mutation OfficialRatesEdit($props: OfficialRatesEditMutationProps!) {\n    official {\n      rates {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialRatesEditDocument,
    "\n  mutation CompanyOccupantsDelete(\n    $props: CompanyOccupantsDeleteMutationProps!\n  ) {\n    company {\n      occupants {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyOccupantsDeleteDocument,
    "\n  query OfficialUserGets($props: OfficialUserInfoGetQueryProps!) {\n    official {\n      users {\n        get {\n          result(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserGetsDocument,
    "\n  mutation CompanyOccupantsAdd($props: CompanyOccupantsAddMutationProps!) {\n    company {\n      occupants {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyOccupantsAddDocument,
    "\n  mutation CompanyAddressAdd($props: CompanyAddressAddMutationProps!) {\n    company {\n      addresses {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyAddressAddDocument,
    "\n  mutation CompanyAddressDelete($props: CompanyAddressDeleteMutationProps!) {\n    company {\n      addresses {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyAddressDeleteDocument,
    "\n  mutation CompanyAddressEdit($props: CompanyAddressEditMutationProps!) {\n    company {\n      addresses {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyAddressEditDocument,
    "\n  query TerritorialDivisonFullData2($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          community {\n            community_ID\n            community_name\n          }\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n          }\n        }\n      }\n    }\n  }\n": types.TerritorialDivisonFullData2Document,
    "\n  query CompanyOccupantsGet {\n    company {\n      addresses {\n        get {\n          usersAddress_ID\n          usersAddress_userID\n          usersAddress_street\n          usersAddress_houseNumber\n          usersAddress_apartamentNumber\n          usersAddress_postCode\n          usersAddress_city\n          usersAddress_typeID\n          usersAddress_communityID\n          usersAddress_statusID\n        }\n      }\n    }\n  }\n": types.CompanyOccupantsGetDocument,
    "\n  mutation CompanyProfileUpdate($props: CompanyInfoProfileMutationProps!) {\n    company {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.CompanyProfileUpdateDocument,
    "\n  query CompanyGarbageGet($props: CompanyGarbageGetQueryProps!) {\n    company {\n      garbage {\n        get(props: $props) {\n          dumpsterID\n          garbage {\n            paper\n            glass\n            bio\n            plastic\n            mixed\n          }\n        }\n      }\n    }\n  }\n": types.CompanyGarbageGetDocument,
    "\n  query CompanyDumpstersGet {\n    company {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          contracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              rate_ID\n              rate_value\n              rate_dumpsterContractID\n              rate_typeID\n              rate_statusID\n              rate_userContractID\n            }\n          }\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_dumpsterID\n            dumpsterBin_isFull\n            dumpsterBin_typeID\n          }\n        }\n      }\n    }\n  }\n": types.CompanyDumpstersGetDocument,
    "\n  query OfficialBinGet($props: OfficialBinGetQueryProps!) {\n    official {\n      bins {\n        get(props: $props) {\n          dumpsterBin_ID\n          dumpsterBin_dumpsterID\n          dumpsterBin_isFull\n          dumpsterBin_typeID\n        }\n      }\n    }\n  }\n": types.OfficialBinGetDocument,
    "\n  mutation Login($props: AuthLoginMutationProps!) {\n    auth {\n      login(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n": types.LoginDocument,
    "\n  mutation ChangePasswordMutation($props: ChangePasswordMutationProps!) {\n    user {\n      passwordRecovery {\n        resetPassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.ChangePasswordMutationDocument,
    "\n  query UserRecoveryTokenQuery($props: UserIDProps!) {\n    user {\n      passwordRecovery {\n        compare(props: $props)\n      }\n    }\n  }\n": types.UserRecoveryTokenQueryDocument,
    "\n  mutation IsUserExist($props: IsUserExistProps!) {\n    user {\n      passwordRecovery {\n        get(props: $props)\n      }\n    }\n  }\n": types.IsUserExistDocument,
    "\n  mutation CreateUser($props: AuthRegisterMutationProps!) {\n    auth {\n      register(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n": types.CreateUserDocument,
    "\n  mutation OfficialCreateUserAdd($props: OfficialCreateUserAddMutationProps!) {\n    official {\n      createUser {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialCreateUserAddDocument,
    "\n  mutation OfficialCardsApplicationsVerify(\n    $props: OfficialCardsApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        cards {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialCardsApplicationsVerifyDocument,
    "\n  mutation OfficialAddressInfoApplicationsVerifyDelete(\n    $props: OfficialDeleteAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyDelete(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationsVerifyDeleteDocument,
    "\n  mutation OfficialDumpstersApplicationsVerifyAdd(\n    $props: OfficialAddDumpstersApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialDumpstersApplicationsVerifyAddDocument,
    "\n  mutation OfficialAddressInfoApplicationsVerifyEdit(\n    $props: OfficialEditAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationsVerifyEditDocument,
    "\n  mutation OfficialUserInfoApplicationsVerifyEdit(\n    $props: OfficialEditUserInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserInfoApplicationsVerifyEditDocument,
    "\n  mutation OfficialAddressInfoApplicationsVerifyAdd(\n    $props: OfficialAddAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationsVerifyAddDocument,
    "\n  mutation OfficialNewUserApplicationVerify(\n    $props: OfficialNewUserApplicationVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialNewUserApplicationVerifyDocument,
    "\n  query OfficialDumpstersGet {\n    official {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          bins {\n            dumpsterBin_typeID\n            dumpsterBin_isFull\n          }\n          contracts {\n            dumpsterContract_dateTo\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dateFrom\n            dumpsterContract_statusID\n            dumpsterContract_dumpsterID\n            rates {\n              rate_ID\n              rate_typeID\n              rate_value\n              rate_statusID\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialDumpstersGetDocument,
    "\n  mutation OfficialUserInfoEdit($props: OfficialUserInfoEditMutationProps!) {\n    official {\n      info {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserInfoEditDocument,
    "\n  mutation OfficialAddressInfoAdd(\n    $props: OfficialAddressInfoAddMutationProps!\n  ) {\n    official {\n      address {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoAddDocument,
    "\n  mutation OfficialCardsAdd($props: OfficialCardsAddMutationProps!) {\n    official {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialCardsAddDocument,
    "\n  mutation OfficialUserContractsAdd(\n    $props: OfficialUserContractsAddMutationProps!\n  ) {\n    official {\n      userContracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserContractsAddDocument,
    "\n  mutation OfficialUsersDelete($props: OfficialDeleteUserMutationProps!) {\n    official {\n      users {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUsersDeleteDocument,
    "\n  mutation OfficialAddressInfoDelete(\n    $props: OfficialAddressInfoDeleteMutationProps!\n  ) {\n    official {\n      address {\n        delete(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoDeleteDocument,
    "\n  mutation OfficialAddressInfoEdit(\n    $props: OfficialAddressInfoEditMutationProps!\n  ) {\n    official {\n      address {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoEditDocument,
    "\n  mutation OfficialDumpstersAdd($props: OfficialDumpstersAddMutationProps!) {\n    official {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialDumpstersAddDocument,
    "\n  query CommonDumpstersGet1($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n": types.CommonDumpstersGet1Document,
    "\n  mutation OfficialDumpstersDelete(\n    $props: OfficialDumpstersDeleteMutationProps!\n  ) {\n    official {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialDumpstersDeleteDocument,
    "\n  mutation OfficialCardsEdit($props: OfficialCardsEditMutationProps!) {\n    official {\n      cards {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialCardsEditDocument,
    "\n  mutation OfficialUserContractsArchivize(\n    $props: OfficialUserContractsArchivizeMutationProps!\n  ) {\n    official {\n      userContracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserContractsArchivizeDocument,
    "\n  mutation OfficialUserContractsEdit(\n    $props: OfficialUserContractsEditMutationProps!\n  ) {\n    official {\n      userContracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserContractsEditDocument,
    "\n  mutation SuperOfficialOfficialAdd(\n    $props: SuperOfficialNewOfficialAddMutationProps!\n  ) {\n    official {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.SuperOfficialOfficialAddDocument,
    "\n  mutation SuperOfficialOfficialDelete(\n    $props: SuperOfficialOfficialDeleteMutationProps!\n  ) {\n    official {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.SuperOfficialOfficialDeleteDocument,
    "\n  mutation SuperOfficialOfficialEdit(\n    $props: SuperOfficialOfficialEditMutationProps!\n  ) {\n    official {\n      officials {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.SuperOfficialOfficialEditDocument,
    "\n  query SuperOfficialOfficialsGet {\n    official {\n      officials {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n": types.SuperOfficialOfficialsGetDocument,
    "\n  mutation SuperOfficialOfficialRestore(\n    $props: SuperOfficialOfficialRestoreMutationProps!\n  ) {\n    official {\n      officials {\n        restore(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.SuperOfficialOfficialRestoreDocument,
    "\n  query OfficialApplicationsArchiveGet {\n    official {\n      applications {\n        archive {\n          get {\n            addressApplications {\n              addressApplications_ID\n              addressApplications_typeID\n              addressApplications_addressTypeID\n              addressApplications_userName\n              addressApplications_statusID\n              addressApplications_dateAdded\n              addressApplications_userLogin\n              addressApplications_userIdentificationNumber\n              addressApplications_street\n              addressApplications_houseNumber\n              addressApplications_apartamentNumber\n              addressApplications_postCode\n              addressApplications_city\n              addressApplications_dateReviewed\n            }\n            dumpstersApplications {\n              dumpstersApplications_ID\n              dumpstersApplications_typeID\n              dumpstersApplications_userName\n              dumpstersApplications_statusID\n              dumpstersApplications_dateAdded\n              dumpstersApplications_userLogin\n              dumpstersApplications_userIdentificationNumber\n              dumpstersApplications_cardNumber\n              dumpstersApplications_dumpsterNumber\n              dumpstersApplications_dateReviewed\n            }\n            cardsApplications {\n              cardsApplications_ID\n              cardsApplications_typeID\n              cardsApplications_userName\n              cardsApplications_statusID\n              cardsApplications_dateAdded\n              cardsApplications_userName\n              cardsApplications_userLogin\n              cardsApplications_userIdentificationNumber\n              cardsApplications_dateReviewed\n            }\n            personalDataApplications {\n              personalDataApplications_ID\n              personalDataApplications_userName\n              personalDataApplications_statusID\n              personalDataApplications_dateAdded\n              personalDataApplications_userLogin\n              personalDataApplications_userIdentificationNumber\n              personalDataApplications_name\n              personalDataApplications_dateReviewed\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialApplicationsArchiveGetDocument,
    "\n  query OfficialUserGet($props: OfficialSelectedUserDataGetQueryProps!) {\n    official {\n      user {\n        get {\n          result(props: $props) {\n            userType\n            basicInfo {\n              users_name\n              users_identificationNumber\n              users_login\n              users_phoneNumber\n              users_ID\n              users_statusID\n            }\n            cards {\n              usersCards_statusID\n              usersCards_ID\n              usersCards_number\n              usersCards_numberPIN\n              dumpsters {\n                dumpster_name\n                dumpster_city\n                dumpster_street\n                dumpster_houseNumbers\n                dumpster_ID\n              }\n            }\n            addressInfo {\n              usersAddress_typeID\n              usersAddress_ID\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n              usersAddress_communityID\n            }\n            contracts {\n              userContracts {\n                usersContract_ID\n                usersContract_userID\n                usersContract_number\n                usersContract_dateFrom\n                usersContract_dateTo\n                usersContract_statusID\n                usersContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n              housingAssociationContracts {\n                dumpsterContract_ID\n                dumpsterContract_number\n                dumpsterContract_dumpsterID\n                dumpsterContract_dateFrom\n                dumpsterContract_dateTo\n                dumpsterContract_statusID\n                dumpsterContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserGetDocument,
    "\n  query OfficialNewUsersApplicationGet(\n    $props: OfficialApplicationsNewUsersQueryProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          get(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n            addresses {\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialNewUsersApplicationGetDocument,
    "\n  query OfficialUserInfoApplicationGet(\n    $props: OfficialApplicationsUserInfoQueryProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          get(props: $props) {\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_dateReviewed\n            personalDataApplications_typeID\n            personalDataApplications_reviewedBy\n            personalDataApplications_userID\n            personalDataApplications_statusID\n            personalDataApplications_name\n            personalDataApplications_oldName\n          }\n        }\n      }\n    }\n  }\n": types.OfficialUserInfoApplicationGetDocument,
    "\n  query OfficialCardsApplicationGet(\n    $props: OfficialApplicationsCardsQueryProps!\n  ) {\n    official {\n      applications {\n        cards {\n          get(props: $props) {\n            cardsApplications_ID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n            cardsApplications_typeID\n            cardsApplications_reviewedBy\n            cardsApplications_userID\n            cardsApplications_statusID\n            user {\n              users_name\n              users_ID\n            }\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialCardsApplicationGetDocument,
    "\n  query OfficialDumpstersApplicationGet(\n    $props: OfficialApplicationsDumpstersQueryProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          get(props: $props) {\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_typeID\n            dumpstersApplications_reviewedBy\n            dumpstersApplications_userID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_statusID\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterName\n            dumpstersApplications_userName\n            dumpstersApplications_cardNumber\n          }\n        }\n      }\n    }\n  }\n": types.OfficialDumpstersApplicationGetDocument,
    "\n  query OfficialAddressInfoApplicationGet(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationGetDocument,
    "\n  query OfficialAddressInfoApplicationGet3(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationGet3Document,
    "\n  query OfficialAddressInfoApplicationGet2(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n": types.OfficialAddressInfoApplicationGet2Document,
    "\n  mutation UserApplicationCancel($props: UserApplicationCancelMutationProps!) {\n    user {\n      applications {\n        cancel(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserApplicationCancelDocument,
    "\n  query UserApplicationsGet {\n    user {\n      applications {\n        get {\n          cards {\n            cardsApplications_ID\n            cardsApplications_userID\n            cardsApplications_statusID\n            cardsApplications_typeID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n          }\n          dumpsters {\n            dumpstersApplications_statusID\n            dumpstersApplications_typeID\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_ID\n          }\n          address {\n            addressApplications_statusID\n            addressApplications_ID\n            addressApplications_typeID\n            addressApplications_addressTypeID\n            addressApplications_dateAdded\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_dateReviewed\n          }\n          personalData {\n            personalDataApplications_statusID\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_name\n            personalDataApplications_dateReviewed\n          }\n        }\n      }\n    }\n  }\n": types.UserApplicationsGetDocument,
    "\n  query CommonDumpstersGet($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n": types.CommonDumpstersGetDocument,
    "\n  mutation UserDumpstersAdd($props: UserDumpstersAddMutationProps!) {\n    user {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.UserDumpstersAddDocument,
    "\n  mutation CompanyDumpstersAdd($props: CompanyDumpstersAddMutationProps!) {\n    company {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.CompanyDumpstersAddDocument,
    "\n  query CommonDumpstersGet5($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n": types.CommonDumpstersGet5Document,
    "\n  mutation UserCardsAdd($props: UserCardsAddMutationProps!) {\n    user {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserCardsAddDocument,
    "\n  mutation UserCardsDelete($props: UserCardsDeleteMutationProps!) {\n    user {\n      cards {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserCardsDeleteDocument,
    "\n  mutation UserDumpstersDelete($props: UserDumpstersDeleteMutationProps!) {\n    user {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserDumpstersDeleteDocument,
    "\n  query UserGarbages($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n": types.UserGarbagesDocument,
    "\n  mutation BaseDataUpdate($props: UserInfoProfileMutationProps!) {\n    user {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.BaseDataUpdateDocument,
    "\n  mutation ContactUpdate($props: UserInfoContactsMutationProps!) {\n    user {\n      info {\n        contacts(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.ContactUpdateDocument,
    "\n  mutation PINUpdate($props: UserInfoPINMutationProps!) {\n    user {\n      info {\n        pin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.PinUpdateDocument,
    "\n  mutation PasswordUpdate($props: UserInfoPasswordMutationProps!) {\n    user {\n      info {\n        password(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.PasswordUpdateDocument,
    "\n  mutation UserAddressInfoAdd($props: UserAddressInfoAddMutationProps!) {\n    user {\n      addressInfo {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n": types.UserAddressInfoAddDocument,
    "\n  query TerritorialDivisonFullData1($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n            voivodeship_description\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n            municipality_description\n            municipality_voivodeshipID\n          }\n          community {\n            community_ID\n            community_name\n            community_description\n            community_voivodeshipID\n            community_municipalityID\n          }\n        }\n      }\n    }\n  }\n": types.TerritorialDivisonFullData1Document,
    "\n  mutation UserAddressInfoDelete($props: UserAddressInfoDeleteMutationProps!) {\n    user {\n      addressInfo {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserAddressInfoDeleteDocument,
    "\n  mutation UserAddressInfoEdit($props: UserAddressInfoEditMutationProps!) {\n    user {\n      addressInfo {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n": types.UserAddressInfoEditDocument,
    "\n  query CurrentUser1 {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n          }\n          cards {\n            usersCards_ID\n            usersCards_statusID\n            usersCards_number\n            usersCards_rentedToUserID\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n              dumpster_city\n              dumpster_street\n              dumpster_houseNumbers\n            }\n          }\n        }\n      }\n    }\n  }\n": types.CurrentUser1Document,
    "\n  query UserCardsInfo {\n    user {\n      card {\n        cardsAndDumpsters {\n          dumpsters {\n            dumpster_city\n            dumpster_houseNumbers\n            dumpster_name\n            dumpster_street\n          }\n          usersCards_ID\n          usersCards_number\n        }\n      }\n    }\n  }\n": types.UserCardsInfoDocument,
    "\n  query UserContractGet {\n    user {\n      contract {\n        get {\n          userContracts {\n            usersContract_ID\n            usersContract_userID\n            usersContract_number\n            usersContract_dateFrom\n            usersContract_dateTo\n            usersContract_statusID\n            usersContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n          housingAssociationContracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n        }\n      }\n    }\n  }\n": types.UserContractGetDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CurrentUser {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n            users_statusID\n            users_name\n            users_identificationNumber\n            users_login\n            users_phoneNumber\n          }\n          addressInfo {\n            usersAddress_communityID\n            usersAddress_typeID\n            usersAddress_ID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n          }\n          cards {\n            usersCards_ID\n            usersCards_number\n          }\n          dumpsters {\n            dumpster_ID\n            dumpster_name\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CurrentUser {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n            users_statusID\n            users_name\n            users_identificationNumber\n            users_login\n            users_phoneNumber\n          }\n          addressInfo {\n            usersAddress_communityID\n            usersAddress_typeID\n            usersAddress_ID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n          }\n          cards {\n            usersCards_ID\n            usersCards_number\n          }\n          dumpsters {\n            dumpster_ID\n            dumpster_name\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query AdminCardsOrdersGet {\n    admin {\n      cardsOrders {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n          cardsBulkOrder_numOfCards\n          user {\n            users_name\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query AdminCardsOrdersGet {\n    admin {\n      cardsOrders {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n          cardsBulkOrder_numOfCards\n          user {\n            users_name\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminCardsOrdersVerifyAdd(\n    $props: AdminCardsOrdersVerifyAddMutationProps!\n  ) {\n    admin {\n      cardsOrders {\n        verifyAdd(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminCardsOrdersVerifyAdd(\n    $props: AdminCardsOrdersVerifyAddMutationProps!\n  ) {\n    admin {\n      cardsOrders {\n        verifyAdd(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminDumpstersBinEdit($props: AdminDumpstersBinEditMutationProps!) {\n    admin {\n      dumpsters {\n        bin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminDumpstersBinEdit($props: AdminDumpstersBinEditMutationProps!) {\n    admin {\n      dumpsters {\n        bin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminDumpstersAdd($props: AdminDumpstersAddMutationProps!) {\n    admin {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminDumpstersAdd($props: AdminDumpstersAddMutationProps!) {\n    admin {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminDumpstersDelete($props: AdminDumpstersDeleteMutationProps!) {\n    admin {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminDumpstersDelete($props: AdminDumpstersDeleteMutationProps!) {\n    admin {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminDumpstersEdit($props: AdminDumpstersEditMutationProps!) {\n    admin {\n      dumpsters {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminDumpstersEdit($props: AdminDumpstersEditMutationProps!) {\n    admin {\n      dumpsters {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query AdminDumpstersGet2 {\n    admin {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          dumpster_name\n          dumpster_description\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_typeID\n          }\n          owners {\n            users_name\n            users_ID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query AdminDumpstersGet2 {\n    admin {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          dumpster_name\n          dumpster_description\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_typeID\n          }\n          owners {\n            users_name\n            users_ID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminOwnersAdd($props: AdminOwnersAddMutationProps!) {\n    admin {\n      owners {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminOwnersAdd($props: AdminOwnersAddMutationProps!) {\n    admin {\n      owners {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminOfficialsAdd($props: AdminNewOfficialAddMutationProps!) {\n    admin {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminOfficialsAdd($props: AdminNewOfficialAddMutationProps!) {\n    admin {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminOwnersDelete($props: AdminOwnersDeleteMutationProps!) {\n    admin {\n      owners {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminOwnersDelete($props: AdminOwnersDeleteMutationProps!) {\n    admin {\n      owners {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminChangePassword(\n    $props: AdminChangeOfficialAndSuperOfficialChangePasswordProps!\n  ) {\n    admin {\n      officials {\n        changePassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminChangePassword(\n    $props: AdminChangeOfficialAndSuperOfficialChangePasswordProps!\n  ) {\n    admin {\n      officials {\n        changePassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AdminOfficialsDelete($props: AdminOfficialsDeleteMutationProps!) {\n    admin {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AdminOfficialsDelete($props: AdminOfficialsDeleteMutationProps!) {\n    admin {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query AdminOfficialsGet {\n    admin {\n      officials {\n        get {\n          users_ID\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          users_name\n          users_login\n          addresses {\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_city\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query AdminOfficialsGet {\n    admin {\n      officials {\n        get {\n          users_ID\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          users_name\n          users_login\n          addresses {\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_city\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserGarbageGet($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserGarbageGet($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query TerritorialDivisonMunicipalities(\n    $props: TerritorialMunicipalitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      municipalities {\n        get(props: $props) {\n          municipality_ID\n          municipality_name\n          municipality_description\n          municipality_voivodeshipID\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query TerritorialDivisonMunicipalities(\n    $props: TerritorialMunicipalitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      municipalities {\n        get(props: $props) {\n          municipality_ID\n          municipality_name\n          municipality_description\n          municipality_voivodeshipID\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query TerritorialDivisonCommunities(\n    $props: TerritorialCommunitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      communities {\n        get(props: $props) {\n          community_ID\n          community_name\n          community_description\n          community_municipalityID\n          community_voivodeshipID\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query TerritorialDivisonCommunities(\n    $props: TerritorialCommunitiesGetQueryProps!\n  ) {\n    territorialDivision {\n      communities {\n        get(props: $props) {\n          community_ID\n          community_name\n          community_description\n          community_municipalityID\n          community_voivodeshipID\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyCardsAdd($props: CompanyCardsAddMutationProps!) {\n    company {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyCardsAdd($props: CompanyCardsAddMutationProps!) {\n    company {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CompanyCardsGet {\n    company {\n      cards {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_userID\n          cardsBulkOrder_numOfCards\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CompanyCardsGet {\n    company {\n      cards {\n        get {\n          cardsBulkOrder_ID\n          cardsBulkOrder_userID\n          cardsBulkOrder_numOfCards\n          cardsBulkOrder_statusID\n          cardsBulkOrder_orderDate\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CompanyOccupantsGets {\n    company {\n      occupants {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_statusID\n          connection_ID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CompanyOccupantsGets {\n    company {\n      occupants {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_statusID\n          connection_ID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyCardsRentAdd($props: CompanyCardsRentAddMutationProps!) {\n    company {\n      cardsRent {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyCardsRentAdd($props: CompanyCardsRentAddMutationProps!) {\n    company {\n      cardsRent {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyCardsRentDelete(\n    $props: CompanyCardsRentDeleteMutationProps!\n  ) {\n    company {\n      cardsRent {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyCardsRentDelete(\n    $props: CompanyCardsRentDeleteMutationProps!\n  ) {\n    company {\n      cardsRent {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CommonUserGet($props: CommonUserDataGetQueryProps!) {\n    common {\n      user {\n        get(props: $props) {\n          basicInfo {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CommonUserGet($props: CommonUserDataGetQueryProps!) {\n    common {\n      user {\n        get(props: $props) {\n          basicInfo {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialContractsAdd($props: OfficialContractsAddMutationProps!) {\n    official {\n      contracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialContractsAdd($props: OfficialContractsAddMutationProps!) {\n    official {\n      contracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialContractsArchivize(\n    $props: OfficialContractsArchivizeMutationProps!\n  ) {\n    official {\n      contracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialContractsArchivize(\n    $props: OfficialContractsArchivizeMutationProps!\n  ) {\n    official {\n      contracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialContractsEdit($props: OfficialContractsEditMutationProps!) {\n    official {\n      contracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialContractsEdit($props: OfficialContractsEditMutationProps!) {\n    official {\n      contracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialRatesAdd($props: OfficialRatesAddMutationProps!) {\n    official {\n      rates {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialRatesAdd($props: OfficialRatesAddMutationProps!) {\n    official {\n      rates {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialRatesDelete($props: OfficialRatesDeleteMutationProps!) {\n    official {\n      rates {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialRatesDelete($props: OfficialRatesDeleteMutationProps!) {\n    official {\n      rates {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialRatesEdit($props: OfficialRatesEditMutationProps!) {\n    official {\n      rates {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialRatesEdit($props: OfficialRatesEditMutationProps!) {\n    official {\n      rates {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyOccupantsDelete(\n    $props: CompanyOccupantsDeleteMutationProps!\n  ) {\n    company {\n      occupants {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyOccupantsDelete(\n    $props: CompanyOccupantsDeleteMutationProps!\n  ) {\n    company {\n      occupants {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialUserGets($props: OfficialUserInfoGetQueryProps!) {\n    official {\n      users {\n        get {\n          result(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialUserGets($props: OfficialUserInfoGetQueryProps!) {\n    official {\n      users {\n        get {\n          result(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyOccupantsAdd($props: CompanyOccupantsAddMutationProps!) {\n    company {\n      occupants {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyOccupantsAdd($props: CompanyOccupantsAddMutationProps!) {\n    company {\n      occupants {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyAddressAdd($props: CompanyAddressAddMutationProps!) {\n    company {\n      addresses {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyAddressAdd($props: CompanyAddressAddMutationProps!) {\n    company {\n      addresses {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyAddressDelete($props: CompanyAddressDeleteMutationProps!) {\n    company {\n      addresses {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyAddressDelete($props: CompanyAddressDeleteMutationProps!) {\n    company {\n      addresses {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyAddressEdit($props: CompanyAddressEditMutationProps!) {\n    company {\n      addresses {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyAddressEdit($props: CompanyAddressEditMutationProps!) {\n    company {\n      addresses {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query TerritorialDivisonFullData2($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          community {\n            community_ID\n            community_name\n          }\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query TerritorialDivisonFullData2($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          community {\n            community_ID\n            community_name\n          }\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CompanyOccupantsGet {\n    company {\n      addresses {\n        get {\n          usersAddress_ID\n          usersAddress_userID\n          usersAddress_street\n          usersAddress_houseNumber\n          usersAddress_apartamentNumber\n          usersAddress_postCode\n          usersAddress_city\n          usersAddress_typeID\n          usersAddress_communityID\n          usersAddress_statusID\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CompanyOccupantsGet {\n    company {\n      addresses {\n        get {\n          usersAddress_ID\n          usersAddress_userID\n          usersAddress_street\n          usersAddress_houseNumber\n          usersAddress_apartamentNumber\n          usersAddress_postCode\n          usersAddress_city\n          usersAddress_typeID\n          usersAddress_communityID\n          usersAddress_statusID\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyProfileUpdate($props: CompanyInfoProfileMutationProps!) {\n    company {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyProfileUpdate($props: CompanyInfoProfileMutationProps!) {\n    company {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CompanyGarbageGet($props: CompanyGarbageGetQueryProps!) {\n    company {\n      garbage {\n        get(props: $props) {\n          dumpsterID\n          garbage {\n            paper\n            glass\n            bio\n            plastic\n            mixed\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CompanyGarbageGet($props: CompanyGarbageGetQueryProps!) {\n    company {\n      garbage {\n        get(props: $props) {\n          dumpsterID\n          garbage {\n            paper\n            glass\n            bio\n            plastic\n            mixed\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CompanyDumpstersGet {\n    company {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          contracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              rate_ID\n              rate_value\n              rate_dumpsterContractID\n              rate_typeID\n              rate_statusID\n              rate_userContractID\n            }\n          }\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_dumpsterID\n            dumpsterBin_isFull\n            dumpsterBin_typeID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CompanyDumpstersGet {\n    company {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          contracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              rate_ID\n              rate_value\n              rate_dumpsterContractID\n              rate_typeID\n              rate_statusID\n              rate_userContractID\n            }\n          }\n          bins {\n            dumpsterBin_ID\n            dumpsterBin_dumpsterID\n            dumpsterBin_isFull\n            dumpsterBin_typeID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialBinGet($props: OfficialBinGetQueryProps!) {\n    official {\n      bins {\n        get(props: $props) {\n          dumpsterBin_ID\n          dumpsterBin_dumpsterID\n          dumpsterBin_isFull\n          dumpsterBin_typeID\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialBinGet($props: OfficialBinGetQueryProps!) {\n    official {\n      bins {\n        get(props: $props) {\n          dumpsterBin_ID\n          dumpsterBin_dumpsterID\n          dumpsterBin_isFull\n          dumpsterBin_typeID\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation Login($props: AuthLoginMutationProps!) {\n    auth {\n      login(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation Login($props: AuthLoginMutationProps!) {\n    auth {\n      login(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation ChangePasswordMutation($props: ChangePasswordMutationProps!) {\n    user {\n      passwordRecovery {\n        resetPassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation ChangePasswordMutation($props: ChangePasswordMutationProps!) {\n    user {\n      passwordRecovery {\n        resetPassword(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserRecoveryTokenQuery($props: UserIDProps!) {\n    user {\n      passwordRecovery {\n        compare(props: $props)\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserRecoveryTokenQuery($props: UserIDProps!) {\n    user {\n      passwordRecovery {\n        compare(props: $props)\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation IsUserExist($props: IsUserExistProps!) {\n    user {\n      passwordRecovery {\n        get(props: $props)\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation IsUserExist($props: IsUserExistProps!) {\n    user {\n      passwordRecovery {\n        get(props: $props)\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CreateUser($props: AuthRegisterMutationProps!) {\n    auth {\n      register(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CreateUser($props: AuthRegisterMutationProps!) {\n    auth {\n      register(props: $props) {\n        status {\n          message\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialCreateUserAdd($props: OfficialCreateUserAddMutationProps!) {\n    official {\n      createUser {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialCreateUserAdd($props: OfficialCreateUserAddMutationProps!) {\n    official {\n      createUser {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialCardsApplicationsVerify(\n    $props: OfficialCardsApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        cards {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialCardsApplicationsVerify(\n    $props: OfficialCardsApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        cards {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoApplicationsVerifyDelete(\n    $props: OfficialDeleteAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyDelete(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoApplicationsVerifyDelete(\n    $props: OfficialDeleteAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyDelete(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialDumpstersApplicationsVerifyAdd(\n    $props: OfficialAddDumpstersApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialDumpstersApplicationsVerifyAdd(\n    $props: OfficialAddDumpstersApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoApplicationsVerifyEdit(\n    $props: OfficialEditAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoApplicationsVerifyEdit(\n    $props: OfficialEditAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUserInfoApplicationsVerifyEdit(\n    $props: OfficialEditUserInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUserInfoApplicationsVerifyEdit(\n    $props: OfficialEditUserInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          verifyEdit(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoApplicationsVerifyAdd(\n    $props: OfficialAddAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoApplicationsVerifyAdd(\n    $props: OfficialAddAddressInfoApplicationsVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          verifyAdd(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialNewUserApplicationVerify(\n    $props: OfficialNewUserApplicationVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialNewUserApplicationVerify(\n    $props: OfficialNewUserApplicationVerifyMutationProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          verify(props: $props) {\n            status {\n              message\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialDumpstersGet {\n    official {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          bins {\n            dumpsterBin_typeID\n            dumpsterBin_isFull\n          }\n          contracts {\n            dumpsterContract_dateTo\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dateFrom\n            dumpsterContract_statusID\n            dumpsterContract_dumpsterID\n            rates {\n              rate_ID\n              rate_typeID\n              rate_value\n              rate_statusID\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialDumpstersGet {\n    official {\n      dumpsters {\n        get {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n          bins {\n            dumpsterBin_typeID\n            dumpsterBin_isFull\n          }\n          contracts {\n            dumpsterContract_dateTo\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dateFrom\n            dumpsterContract_statusID\n            dumpsterContract_dumpsterID\n            rates {\n              rate_ID\n              rate_typeID\n              rate_value\n              rate_statusID\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUserInfoEdit($props: OfficialUserInfoEditMutationProps!) {\n    official {\n      info {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUserInfoEdit($props: OfficialUserInfoEditMutationProps!) {\n    official {\n      info {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoAdd(\n    $props: OfficialAddressInfoAddMutationProps!\n  ) {\n    official {\n      address {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoAdd(\n    $props: OfficialAddressInfoAddMutationProps!\n  ) {\n    official {\n      address {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialCardsAdd($props: OfficialCardsAddMutationProps!) {\n    official {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialCardsAdd($props: OfficialCardsAddMutationProps!) {\n    official {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUserContractsAdd(\n    $props: OfficialUserContractsAddMutationProps!\n  ) {\n    official {\n      userContracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUserContractsAdd(\n    $props: OfficialUserContractsAddMutationProps!\n  ) {\n    official {\n      userContracts {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUsersDelete($props: OfficialDeleteUserMutationProps!) {\n    official {\n      users {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUsersDelete($props: OfficialDeleteUserMutationProps!) {\n    official {\n      users {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoDelete(\n    $props: OfficialAddressInfoDeleteMutationProps!\n  ) {\n    official {\n      address {\n        delete(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoDelete(\n    $props: OfficialAddressInfoDeleteMutationProps!\n  ) {\n    official {\n      address {\n        delete(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialAddressInfoEdit(\n    $props: OfficialAddressInfoEditMutationProps!\n  ) {\n    official {\n      address {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialAddressInfoEdit(\n    $props: OfficialAddressInfoEditMutationProps!\n  ) {\n    official {\n      address {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialDumpstersAdd($props: OfficialDumpstersAddMutationProps!) {\n    official {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialDumpstersAdd($props: OfficialDumpstersAddMutationProps!) {\n    official {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CommonDumpstersGet1($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CommonDumpstersGet1($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialDumpstersDelete(\n    $props: OfficialDumpstersDeleteMutationProps!\n  ) {\n    official {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialDumpstersDelete(\n    $props: OfficialDumpstersDeleteMutationProps!\n  ) {\n    official {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialCardsEdit($props: OfficialCardsEditMutationProps!) {\n    official {\n      cards {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialCardsEdit($props: OfficialCardsEditMutationProps!) {\n    official {\n      cards {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUserContractsArchivize(\n    $props: OfficialUserContractsArchivizeMutationProps!\n  ) {\n    official {\n      userContracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUserContractsArchivize(\n    $props: OfficialUserContractsArchivizeMutationProps!\n  ) {\n    official {\n      userContracts {\n        archivize(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation OfficialUserContractsEdit(\n    $props: OfficialUserContractsEditMutationProps!\n  ) {\n    official {\n      userContracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation OfficialUserContractsEdit(\n    $props: OfficialUserContractsEditMutationProps!\n  ) {\n    official {\n      userContracts {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation SuperOfficialOfficialAdd(\n    $props: SuperOfficialNewOfficialAddMutationProps!\n  ) {\n    official {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation SuperOfficialOfficialAdd(\n    $props: SuperOfficialNewOfficialAddMutationProps!\n  ) {\n    official {\n      officials {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation SuperOfficialOfficialDelete(\n    $props: SuperOfficialOfficialDeleteMutationProps!\n  ) {\n    official {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation SuperOfficialOfficialDelete(\n    $props: SuperOfficialOfficialDeleteMutationProps!\n  ) {\n    official {\n      officials {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation SuperOfficialOfficialEdit(\n    $props: SuperOfficialOfficialEditMutationProps!\n  ) {\n    official {\n      officials {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation SuperOfficialOfficialEdit(\n    $props: SuperOfficialOfficialEditMutationProps!\n  ) {\n    official {\n      officials {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query SuperOfficialOfficialsGet {\n    official {\n      officials {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query SuperOfficialOfficialsGet {\n    official {\n      officials {\n        get {\n          users_ID\n          users_login\n          users_name\n          users_identificationNumber\n          users_phoneNumber\n          users_typeID\n          users_statusID\n          addresses {\n            usersAddress_ID\n            usersAddress_userID\n            usersAddress_street\n            usersAddress_houseNumber\n            usersAddress_apartamentNumber\n            usersAddress_postCode\n            usersAddress_city\n            usersAddress_typeID\n            usersAddress_communityID\n            usersAddress_statusID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation SuperOfficialOfficialRestore(\n    $props: SuperOfficialOfficialRestoreMutationProps!\n  ) {\n    official {\n      officials {\n        restore(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation SuperOfficialOfficialRestore(\n    $props: SuperOfficialOfficialRestoreMutationProps!\n  ) {\n    official {\n      officials {\n        restore(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialApplicationsArchiveGet {\n    official {\n      applications {\n        archive {\n          get {\n            addressApplications {\n              addressApplications_ID\n              addressApplications_typeID\n              addressApplications_addressTypeID\n              addressApplications_userName\n              addressApplications_statusID\n              addressApplications_dateAdded\n              addressApplications_userLogin\n              addressApplications_userIdentificationNumber\n              addressApplications_street\n              addressApplications_houseNumber\n              addressApplications_apartamentNumber\n              addressApplications_postCode\n              addressApplications_city\n              addressApplications_dateReviewed\n            }\n            dumpstersApplications {\n              dumpstersApplications_ID\n              dumpstersApplications_typeID\n              dumpstersApplications_userName\n              dumpstersApplications_statusID\n              dumpstersApplications_dateAdded\n              dumpstersApplications_userLogin\n              dumpstersApplications_userIdentificationNumber\n              dumpstersApplications_cardNumber\n              dumpstersApplications_dumpsterNumber\n              dumpstersApplications_dateReviewed\n            }\n            cardsApplications {\n              cardsApplications_ID\n              cardsApplications_typeID\n              cardsApplications_userName\n              cardsApplications_statusID\n              cardsApplications_dateAdded\n              cardsApplications_userName\n              cardsApplications_userLogin\n              cardsApplications_userIdentificationNumber\n              cardsApplications_dateReviewed\n            }\n            personalDataApplications {\n              personalDataApplications_ID\n              personalDataApplications_userName\n              personalDataApplications_statusID\n              personalDataApplications_dateAdded\n              personalDataApplications_userLogin\n              personalDataApplications_userIdentificationNumber\n              personalDataApplications_name\n              personalDataApplications_dateReviewed\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialApplicationsArchiveGet {\n    official {\n      applications {\n        archive {\n          get {\n            addressApplications {\n              addressApplications_ID\n              addressApplications_typeID\n              addressApplications_addressTypeID\n              addressApplications_userName\n              addressApplications_statusID\n              addressApplications_dateAdded\n              addressApplications_userLogin\n              addressApplications_userIdentificationNumber\n              addressApplications_street\n              addressApplications_houseNumber\n              addressApplications_apartamentNumber\n              addressApplications_postCode\n              addressApplications_city\n              addressApplications_dateReviewed\n            }\n            dumpstersApplications {\n              dumpstersApplications_ID\n              dumpstersApplications_typeID\n              dumpstersApplications_userName\n              dumpstersApplications_statusID\n              dumpstersApplications_dateAdded\n              dumpstersApplications_userLogin\n              dumpstersApplications_userIdentificationNumber\n              dumpstersApplications_cardNumber\n              dumpstersApplications_dumpsterNumber\n              dumpstersApplications_dateReviewed\n            }\n            cardsApplications {\n              cardsApplications_ID\n              cardsApplications_typeID\n              cardsApplications_userName\n              cardsApplications_statusID\n              cardsApplications_dateAdded\n              cardsApplications_userName\n              cardsApplications_userLogin\n              cardsApplications_userIdentificationNumber\n              cardsApplications_dateReviewed\n            }\n            personalDataApplications {\n              personalDataApplications_ID\n              personalDataApplications_userName\n              personalDataApplications_statusID\n              personalDataApplications_dateAdded\n              personalDataApplications_userLogin\n              personalDataApplications_userIdentificationNumber\n              personalDataApplications_name\n              personalDataApplications_dateReviewed\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialUserGet($props: OfficialSelectedUserDataGetQueryProps!) {\n    official {\n      user {\n        get {\n          result(props: $props) {\n            userType\n            basicInfo {\n              users_name\n              users_identificationNumber\n              users_login\n              users_phoneNumber\n              users_ID\n              users_statusID\n            }\n            cards {\n              usersCards_statusID\n              usersCards_ID\n              usersCards_number\n              usersCards_numberPIN\n              dumpsters {\n                dumpster_name\n                dumpster_city\n                dumpster_street\n                dumpster_houseNumbers\n                dumpster_ID\n              }\n            }\n            addressInfo {\n              usersAddress_typeID\n              usersAddress_ID\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n              usersAddress_communityID\n            }\n            contracts {\n              userContracts {\n                usersContract_ID\n                usersContract_userID\n                usersContract_number\n                usersContract_dateFrom\n                usersContract_dateTo\n                usersContract_statusID\n                usersContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n              housingAssociationContracts {\n                dumpsterContract_ID\n                dumpsterContract_number\n                dumpsterContract_dumpsterID\n                dumpsterContract_dateFrom\n                dumpsterContract_dateTo\n                dumpsterContract_statusID\n                dumpsterContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialUserGet($props: OfficialSelectedUserDataGetQueryProps!) {\n    official {\n      user {\n        get {\n          result(props: $props) {\n            userType\n            basicInfo {\n              users_name\n              users_identificationNumber\n              users_login\n              users_phoneNumber\n              users_ID\n              users_statusID\n            }\n            cards {\n              usersCards_statusID\n              usersCards_ID\n              usersCards_number\n              usersCards_numberPIN\n              dumpsters {\n                dumpster_name\n                dumpster_city\n                dumpster_street\n                dumpster_houseNumbers\n                dumpster_ID\n              }\n            }\n            addressInfo {\n              usersAddress_typeID\n              usersAddress_ID\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n              usersAddress_communityID\n            }\n            contracts {\n              userContracts {\n                usersContract_ID\n                usersContract_userID\n                usersContract_number\n                usersContract_dateFrom\n                usersContract_dateTo\n                usersContract_statusID\n                usersContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n              housingAssociationContracts {\n                dumpsterContract_ID\n                dumpsterContract_number\n                dumpsterContract_dumpsterID\n                dumpsterContract_dateFrom\n                dumpsterContract_dateTo\n                dumpsterContract_statusID\n                dumpsterContract_communityID\n                rates {\n                  paper\n                  plastic\n                  glass\n                  bio\n                  mixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialNewUsersApplicationGet(\n    $props: OfficialApplicationsNewUsersQueryProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          get(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n            addresses {\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialNewUsersApplicationGet(\n    $props: OfficialApplicationsNewUsersQueryProps!\n  ) {\n    official {\n      applications {\n        newUser {\n          get(props: $props) {\n            users_ID\n            users_login\n            users_name\n            users_identificationNumber\n            users_phoneNumber\n            users_statusID\n            addresses {\n              usersAddress_street\n              usersAddress_houseNumber\n              usersAddress_apartamentNumber\n              usersAddress_postCode\n              usersAddress_city\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialUserInfoApplicationGet(\n    $props: OfficialApplicationsUserInfoQueryProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          get(props: $props) {\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_dateReviewed\n            personalDataApplications_typeID\n            personalDataApplications_reviewedBy\n            personalDataApplications_userID\n            personalDataApplications_statusID\n            personalDataApplications_name\n            personalDataApplications_oldName\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialUserInfoApplicationGet(\n    $props: OfficialApplicationsUserInfoQueryProps!\n  ) {\n    official {\n      applications {\n        userInfo {\n          get(props: $props) {\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_dateReviewed\n            personalDataApplications_typeID\n            personalDataApplications_reviewedBy\n            personalDataApplications_userID\n            personalDataApplications_statusID\n            personalDataApplications_name\n            personalDataApplications_oldName\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialCardsApplicationGet(\n    $props: OfficialApplicationsCardsQueryProps!\n  ) {\n    official {\n      applications {\n        cards {\n          get(props: $props) {\n            cardsApplications_ID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n            cardsApplications_typeID\n            cardsApplications_reviewedBy\n            cardsApplications_userID\n            cardsApplications_statusID\n            user {\n              users_name\n              users_ID\n            }\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialCardsApplicationGet(\n    $props: OfficialApplicationsCardsQueryProps!\n  ) {\n    official {\n      applications {\n        cards {\n          get(props: $props) {\n            cardsApplications_ID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n            cardsApplications_typeID\n            cardsApplications_reviewedBy\n            cardsApplications_userID\n            cardsApplications_statusID\n            user {\n              users_name\n              users_ID\n            }\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialDumpstersApplicationGet(\n    $props: OfficialApplicationsDumpstersQueryProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          get(props: $props) {\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_typeID\n            dumpstersApplications_reviewedBy\n            dumpstersApplications_userID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_statusID\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterName\n            dumpstersApplications_userName\n            dumpstersApplications_cardNumber\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialDumpstersApplicationGet(\n    $props: OfficialApplicationsDumpstersQueryProps!\n  ) {\n    official {\n      applications {\n        dumpsters {\n          get(props: $props) {\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_typeID\n            dumpstersApplications_reviewedBy\n            dumpstersApplications_userID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_statusID\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterName\n            dumpstersApplications_userName\n            dumpstersApplications_cardNumber\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialAddressInfoApplicationGet(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialAddressInfoApplicationGet(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialAddressInfoApplicationGet3(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialAddressInfoApplicationGet3(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query OfficialAddressInfoApplicationGet2(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query OfficialAddressInfoApplicationGet2(\n    $props: OfficialApplicationsAddressInfoQueryProps!\n  ) {\n    official {\n      applications {\n        addressInfo {\n          get(props: $props) {\n            addressApplications_ID\n            addressApplications_dateAdded\n            addressApplications_dateReviewed\n            addressApplications_typeID\n            addressApplications_reviewedBy\n            addressApplications_userID\n            addressApplications_statusID\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_addressTypeID\n            addressApplications_communityID\n            addressApplications_addressID\n            user {\n              users_ID\n              users_name\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserApplicationCancel($props: UserApplicationCancelMutationProps!) {\n    user {\n      applications {\n        cancel(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserApplicationCancel($props: UserApplicationCancelMutationProps!) {\n    user {\n      applications {\n        cancel(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserApplicationsGet {\n    user {\n      applications {\n        get {\n          cards {\n            cardsApplications_ID\n            cardsApplications_userID\n            cardsApplications_statusID\n            cardsApplications_typeID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n          }\n          dumpsters {\n            dumpstersApplications_statusID\n            dumpstersApplications_typeID\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_ID\n          }\n          address {\n            addressApplications_statusID\n            addressApplications_ID\n            addressApplications_typeID\n            addressApplications_addressTypeID\n            addressApplications_dateAdded\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_dateReviewed\n          }\n          personalData {\n            personalDataApplications_statusID\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_name\n            personalDataApplications_dateReviewed\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserApplicationsGet {\n    user {\n      applications {\n        get {\n          cards {\n            cardsApplications_ID\n            cardsApplications_userID\n            cardsApplications_statusID\n            cardsApplications_typeID\n            cardsApplications_dateAdded\n            cardsApplications_dateReviewed\n          }\n          dumpsters {\n            dumpstersApplications_statusID\n            dumpstersApplications_typeID\n            dumpstersApplications_ID\n            dumpstersApplications_dateAdded\n            dumpstersApplications_cardID\n            dumpstersApplications_dumpsterID\n            dumpstersApplications_dateReviewed\n            dumpstersApplications_ID\n          }\n          address {\n            addressApplications_statusID\n            addressApplications_ID\n            addressApplications_typeID\n            addressApplications_addressTypeID\n            addressApplications_dateAdded\n            addressApplications_street\n            addressApplications_houseNumber\n            addressApplications_apartamentNumber\n            addressApplications_postCode\n            addressApplications_city\n            addressApplications_dateReviewed\n          }\n          personalData {\n            personalDataApplications_statusID\n            personalDataApplications_ID\n            personalDataApplications_dateAdded\n            personalDataApplications_name\n            personalDataApplications_dateReviewed\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CommonDumpstersGet($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CommonDumpstersGet($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserDumpstersAdd($props: UserDumpstersAddMutationProps!) {\n    user {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserDumpstersAdd($props: UserDumpstersAddMutationProps!) {\n    user {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CompanyDumpstersAdd($props: CompanyDumpstersAddMutationProps!) {\n    company {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CompanyDumpstersAdd($props: CompanyDumpstersAddMutationProps!) {\n    company {\n      dumpsters {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CommonDumpstersGet5($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CommonDumpstersGet5($props: CommonDumpstersGetQueryProps!) {\n    common {\n      dumpsters {\n        get(props: $props) {\n          dumpster_ID\n          dumpster_name\n          dumpster_description\n          dumpster_street\n          dumpster_city\n          dumpster_postCode\n          dumpster_communityID\n          dumpster_houseNumbers\n          dumpster_hasError\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserCardsAdd($props: UserCardsAddMutationProps!) {\n    user {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserCardsAdd($props: UserCardsAddMutationProps!) {\n    user {\n      cards {\n        add(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserCardsDelete($props: UserCardsDeleteMutationProps!) {\n    user {\n      cards {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserCardsDelete($props: UserCardsDeleteMutationProps!) {\n    user {\n      cards {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserDumpstersDelete($props: UserDumpstersDeleteMutationProps!) {\n    user {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserDumpstersDelete($props: UserDumpstersDeleteMutationProps!) {\n    user {\n      dumpsters {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserGarbages($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserGarbages($props: UserGarbageGetQueryProps!) {\n    user {\n      garbage {\n        get {\n          result(props: $props) {\n            pieChart {\n              total\n              garbageTypes {\n                color\n                mass\n                type\n                typeID\n              }\n            }\n            lineChart {\n              garbage_sum\n              garbage_typeID\n              month\n              monthIndex\n              waste_name\n              garbage_fullDate\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation BaseDataUpdate($props: UserInfoProfileMutationProps!) {\n    user {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation BaseDataUpdate($props: UserInfoProfileMutationProps!) {\n    user {\n      info {\n        profile(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation ContactUpdate($props: UserInfoContactsMutationProps!) {\n    user {\n      info {\n        contacts(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation ContactUpdate($props: UserInfoContactsMutationProps!) {\n    user {\n      info {\n        contacts(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation PINUpdate($props: UserInfoPINMutationProps!) {\n    user {\n      info {\n        pin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation PINUpdate($props: UserInfoPINMutationProps!) {\n    user {\n      info {\n        pin(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation PasswordUpdate($props: UserInfoPasswordMutationProps!) {\n    user {\n      info {\n        password(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation PasswordUpdate($props: UserInfoPasswordMutationProps!) {\n    user {\n      info {\n        password(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserAddressInfoAdd($props: UserAddressInfoAddMutationProps!) {\n    user {\n      addressInfo {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserAddressInfoAdd($props: UserAddressInfoAddMutationProps!) {\n    user {\n      addressInfo {\n        add(props: $props) {\n          status {\n            message\n            description\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query TerritorialDivisonFullData1($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n            voivodeship_description\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n            municipality_description\n            municipality_voivodeshipID\n          }\n          community {\n            community_ID\n            community_name\n            community_description\n            community_voivodeshipID\n            community_municipalityID\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query TerritorialDivisonFullData1($props: TerritorialFullDataGetQueryProps!) {\n    territorialDivision {\n      fullData {\n        get(props: $props) {\n          voivodeship {\n            voivodeship_ID\n            voivodeship_name\n            voivodeship_description\n          }\n          municipality {\n            municipality_ID\n            municipality_name\n            municipality_description\n            municipality_voivodeshipID\n          }\n          community {\n            community_ID\n            community_name\n            community_description\n            community_voivodeshipID\n            community_municipalityID\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserAddressInfoDelete($props: UserAddressInfoDeleteMutationProps!) {\n    user {\n      addressInfo {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserAddressInfoDelete($props: UserAddressInfoDeleteMutationProps!) {\n    user {\n      addressInfo {\n        delete(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation UserAddressInfoEdit($props: UserAddressInfoEditMutationProps!) {\n    user {\n      addressInfo {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserAddressInfoEdit($props: UserAddressInfoEditMutationProps!) {\n    user {\n      addressInfo {\n        edit(props: $props) {\n          status {\n            message\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query CurrentUser1 {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n          }\n          cards {\n            usersCards_ID\n            usersCards_statusID\n            usersCards_number\n            usersCards_rentedToUserID\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n              dumpster_city\n              dumpster_street\n              dumpster_houseNumbers\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query CurrentUser1 {\n    user {\n      info {\n        get {\n          userType\n          basicInfo {\n            users_ID\n          }\n          cards {\n            usersCards_ID\n            usersCards_statusID\n            usersCards_number\n            usersCards_rentedToUserID\n            dumpsters {\n              dumpster_ID\n              dumpster_name\n              dumpster_city\n              dumpster_street\n              dumpster_houseNumbers\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserCardsInfo {\n    user {\n      card {\n        cardsAndDumpsters {\n          dumpsters {\n            dumpster_city\n            dumpster_houseNumbers\n            dumpster_name\n            dumpster_street\n          }\n          usersCards_ID\n          usersCards_number\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserCardsInfo {\n    user {\n      card {\n        cardsAndDumpsters {\n          dumpsters {\n            dumpster_city\n            dumpster_houseNumbers\n            dumpster_name\n            dumpster_street\n          }\n          usersCards_ID\n          usersCards_number\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query UserContractGet {\n    user {\n      contract {\n        get {\n          userContracts {\n            usersContract_ID\n            usersContract_userID\n            usersContract_number\n            usersContract_dateFrom\n            usersContract_dateTo\n            usersContract_statusID\n            usersContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n          housingAssociationContracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserContractGet {\n    user {\n      contract {\n        get {\n          userContracts {\n            usersContract_ID\n            usersContract_userID\n            usersContract_number\n            usersContract_dateFrom\n            usersContract_dateTo\n            usersContract_statusID\n            usersContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n          housingAssociationContracts {\n            dumpsterContract_ID\n            dumpsterContract_number\n            dumpsterContract_dumpsterID\n            dumpsterContract_dateFrom\n            dumpsterContract_dateTo\n            dumpsterContract_statusID\n            dumpsterContract_communityID\n            rates {\n              paper\n              plastic\n              glass\n              bio\n              mixed\n            }\n          }\n        }\n      }\n    }\n  }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;